---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agola
data:
  config.yml: |
    gateway:
      # The api url that clients will call
      # Change this to the exposed "agola" service IP or dns name
      apiExposedURL: "http://192.168.39.188:30002"
      # The web interface url that clients will use
      # Change this to the exposed "agola" service IP or dns name
      webExposedURL: "http://192.168.39.188:30002"
      runserviceURL: "http://agola-runservice:4000"
      configstoreURL: "http://agola-configstore:4002"
      gitserverURL: "http://agola-gitserver:4003"

      web:
        listenAddress: ":8000"
      tokenSigning:
        # hmac or rsa (it possible use rsa)
        method: hmac
        # key to use when signing with hmac
        key: supersecretsigningkey
        # paths to the private and public keys in pem encoding when using rsa signing
        #privateKeyPath: /path/to/privatekey.pem
        #publicKeyPath: /path/to/public.pem

      cookieSigning:
        key: supersecretsigningkey

      adminToken: "admintoken"

    scheduler:
      runserviceURL: "http://agola-runservice:4000"

    notification:
      webExposedURL: "http://192.168.39.188:30002"
      runserviceURL: "http://agola-runservice:4000"
      configstoreURL: "http://agola-configstore:4002"
      db:
        # example with a postgres db
        type: postgres
        connString: "postgres://@postgres-service/agola_notification?sslmode=disable"

    configstore:
      dataDir: /mnt/agola/local/configstore
      db:
        # example with a postgres db
        type: postgres
        connString: "postgres://@postgres-service/agola_configstore?sslmode=disable"
      objectStorage:
        type: s3
        # example with minio
        endpoint: "http://minio-service:9000"
        bucket: configstore
        accessKey: minio
        secretAccessKey: minio123
      web:
        listenAddress: ":4002"

    runservice:
      #debug: true
      dataDir: /mnt/agola/local/runservice
      db:
        # example with a postgres db
        type: postgres
        connString: "postgres://@postgres-service/agola_runservice?sslmode=disable"
      objectStorage:
        type: s3
        # example with minio
        endpoint: "http://minio-service:9000"
        bucket: runservice
        accessKey: minio
        secretAccessKey: minio123
      web:
        listenAddress: ":4000"

    executor:
      dataDir: /mnt/agola/local/executor
      # The directory containing the toolbox compiled for the various supported architectures
      toolboxPath: ./bin
      runserviceURL: "http://agola-runservice:4000"
      web:
        listenAddress: ":4001"
      activeTasksLimit: 2
      driver:
        type: kubernetes

    gitserver:
      dataDir: /mnt/agola/local/gitserver
      gatewayURL: "http://agola-gateway:8000"
      web:
        listenAddress: ":4003"
